<?xml version="1.0" encoding="utf-8"?>
<ScriptAndGraph GraphType="VertexCommands">
  <Vertices count="5">
    <Vertex index="1" command="-scopeVertex SV1_Extract_Split  -i D:\Downloads\taxi_february_speeds.txt  -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out0&quot; -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out1&quot; -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out2&quot; -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out3&quot;" />
    <Vertex index="2" command="-scopeVertex SV2_Process  -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out0&quot; -ichannel SV1_Extract_Split_out0  -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV2_Process_out0&quot;" />
    <Vertex index="3" command="-scopeVertex SV3_Process  -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out1&quot; -ichannel SV1_Extract_Split_out1  -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV3_Process_out0&quot;" />
    <Vertex index="4" command="-scopeVertex SV4_Process  -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out2&quot; -ichannel SV1_Extract_Split_out2  -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV4_Process_out0&quot;" />
    <Vertex index="5" command="-scopeVertex SV5_Process  -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV1_Extract_Split_out3&quot; -ichannel SV1_Extract_Split_out3  -o &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV5_Process_out0&quot;" />
    <Vertex command="-concatenate -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV2_Process_out0&quot; -o D:\Downloads\output.csv" />
    <Vertex command="-concatenate -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV3_Process_out0&quot; -o D:\Downloads\outputHours.csv" />
    <Vertex command="-concatenate -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV4_Process_out0&quot; -o D:\Downloads\outputHoursStops.csv" />
    <Vertex command="-concatenate -i &quot;C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiLocations\bin\Debug\F69E65693843FCCF\_Temp\Script_D47AE424E3290E46\scopetmpfile._SV5_Process_out0&quot; -o D:\Downloads\outputSpeed.csv" />
  </Vertices>
  <Outputs>
    <Output path="D:\Downloads\output.csv" isBinary="False" schema="Speed:int,PointCount:long?" />
    <Output path="D:\Downloads\outputHours.csv" isBinary="False" schema="Hour:int,HourCount:long?,AvgSpeed:double?" />
    <Output path="D:\Downloads\outputHoursStops.csv" isBinary="False" schema="Hour:int,HourCount:long?,AvgSpeed:double?" />
    <Output path="D:\Downloads\outputSpeed.csv" isBinary="False" schema="TaxiID:int,Average:double?" />
  </Outputs>
  <graph serveForThirdParty="True" JsonErrors="True" JobType="BatchSqlIp" MaxPercentInputUnavailability="0" vertexExecutable="scopehost.exe" BroadcastCopyThroughCommandLine="ScopeEngine.dll -scopeVertex SV_CopyThrough">
    <process id="SV1_Extract_Split" command="ScopeEngine.dll -scopeVertex SV1_Extract_Split" managedMemorySize="851443712" nativeIOMemorySize="134217736" nativeExecutionMemorySize="268435456" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="Extract_0[ALL]" streamSize="1715332096" cosmosStream="D:\Downloads\taxi_february_speeds.txt">
        <cosmosStream cosmosPath="D:\Downloads\taxi_february_speeds.txt" streamSize="1715332096" />
      </input>
      <output id="SV1_Extract_Split_out0" />
      <output id="SV1_Extract_Split_out1" />
      <output id="SV1_Extract_Split_out2" />
      <output id="SV1_Extract_Split_out3" />
    </process>
    <process id="SV2_Process" command="ScopeEngine.dll -scopeVertex SV2_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="58720259" nativeExecutionMemorySize="5859442685" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="SV1_Extract_Split_out0" />
      <output id="SV2_Process_out0" cosmosStream="D:\Downloads\output.csv" />
    </process>
    <process id="SV3_Process" command="ScopeEngine.dll -scopeVertex SV3_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="58720259" nativeExecutionMemorySize="5859442685" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="SV1_Extract_Split_out1" />
      <output id="SV3_Process_out0" cosmosStream="D:\Downloads\outputHours.csv" />
    </process>
    <process id="SV4_Process" command="ScopeEngine.dll -scopeVertex SV4_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="58720259" nativeExecutionMemorySize="5859442685" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="SV1_Extract_Split_out2" />
      <output id="SV4_Process_out0" cosmosStream="D:\Downloads\outputHoursStops.csv" />
    </process>
    <process id="SV5_Process" command="ScopeEngine.dll -scopeVertex SV5_Process" nativeOnly="true" managedMemorySize="0" nativeIOMemorySize="58720259" nativeExecutionMemorySize="5859442685" DummyVertexOptimization="AllInputsEmptyImpliesOutputsEmpty|RunAtLeastOneVertex" trustedVertex="True">
      <input id="SV1_Extract_Split_out3" />
      <output id="SV5_Process_out0" cosmosStream="D:\Downloads\outputSpeed.csv" />
    </process>
    <metadataoperation exeName="MetaDataExecutor.exe" argument="&quot;commit&quot;">
      <MetadataJob xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://schemas.datacontract.org/2004/07/Scope.Metadata.Contract">
        <StorageInfo>
          <DataRoot>D:\Downloads</DataRoot>
          <MountPointName>catalog</MountPointName>
          <MountPointPhysicalPath>D:\Downloads/catalog/</MountPointPhysicalPath>
        </StorageInfo>
        <OperationsSequence>
          <MetadataOperation i:type="CreateEntityOperation">
            <Entity i:type="AssemblyInfo">
              <Name>
                <Server>localcomputeaccount</Server>
                <FirstPart>master</FirstPart>
                <SecondPart>__codeBehind_v5byzwoh.k1a</SecondPart>
              </Name>
              <Version>7e4786a7-74e0-497c-8402-2c34722c2576</Version>
              <ClrName>__codeBehind_v5byzwoh.k1a, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null</ClrName>
              <CreateDate i:nil="true" />
              <Dependencies />
              <Files>
                <AssemblyFileInfo>
                  <ContentFileInfo i:nil="true" />
                  <ContentPath>_catalog_/database/235d952b-afaa-40d9-98ad-7a8d93805589/assembly/7e4786a7-74e0-497c-8402-2c34722c2576/__codeBehind_v5byzwoh.k1a.dll</ContentPath>
                  <OriginalPath i:nil="true" />
                  <Type>ASSEMBLY</Type>
                </AssemblyFileInfo>
              </Files>
              <IsUserDefined>true</IsUserDefined>
              <IsVisible>true</IsVisible>
            </Entity>
          </MetadataOperation>
          <MetadataOperation i:type="DropEntityOperation">
            <DisposeDataArtifacts>true</DisposeDataArtifacts>
            <Entity>
              <Name>
                <Server>localcomputeaccount</Server>
                <FirstPart>master</FirstPart>
                <SecondPart>__codeBehind_v5byzwoh.k1a</SecondPart>
              </Name>
              <Version>7e4786a7-74e0-497c-8402-2c34722c2576</Version>
            </Entity>
            <TypeName>Scope.Metadata.Contract.AssemblyInfo</TypeName>
          </MetadataOperation>
        </OperationsSequence>
        <ScopeJobInfo>
          <JobGuid>00000000-0000-0000-0000-000000000000</JobGuid>
          <JobName></JobName>
        </ScopeJobInfo>
      </MetadataJob>
    </metadataoperation>
  </graph>
  <Scopescript>// Generated Code Behind Header

CREATE ASSEMBLY [__codeBehind_v5byzwoh.k1a] FROM 
REFERENCE ASSEMBLY [__codeBehind_v5byzwoh.k1a];

DEPLOY RESOURCE @"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\System.Core.dll";
DEPLOY RESOURCE @"C:\Users\ACER\documents\visual studio 2015\Projects\TaxiLocations\TaxiDataUtilities\bin\Debug\TaxiDataUtilities.exe";
// Generated Code Behind Header
@input =
    EXTRACT TaxiID int,
            Timestamp DateTime,
            Lat double,
            Lon double,
            Speed double?,
            Staying int?
    FROM "/taxi_february_speeds.txt"
    USING new TaxiLocations.TxtExtractor();

@speedPartition = SELECT *, (int)(Speed / 10) * 10 AS SpeedPartition FROM @input WHERE Speed.HasValue;

@min =
    SELECT SpeedPartition AS Speed, COUNT() AS PointCount
    FROM @speedPartition GROUP BY SpeedPartition;

@avgs =
    SELECT TaxiID, AVG(Speed) AS Average
    FROM @input WHERE Speed.HasValue &amp;&amp; Speed &gt;= 10 GROUP BY TaxiID;
    
@byHours =
    SELECT Timestamp.Hour AS Hour, COUNT() AS HourCount, AVG(Speed) AS AvgSpeed
    FROM @input WHERE Staying.HasValue &amp;&amp; Staying &lt; 4 GROUP BY Timestamp.Hour;

@byHoursStops =
    SELECT Timestamp.Hour AS Hour, COUNT() AS HourCount, AVG(Speed) AS AvgSpeed
    FROM @input WHERE Staying.HasValue &amp;&amp; Staying &gt;= 4 GROUP BY Timestamp.Hour;


OUTPUT @min
TO "/output.csv"
USING Outputters.Csv(outputHeader : true);

OUTPUT @avgs
TO "/outputSpeed.csv"
USING Outputters.Csv(outputHeader : true);

OUTPUT @byHours
TO "/outputHours.csv"
USING Outputters.Csv(outputHeader : true);

OUTPUT @byHoursStops
TO "/outputHoursStops.csv"
USING Outputters.Csv(outputHeader : true);
// Generated Code Behind Footer
USE DATABASE [master];
USE SCHEMA [dbo];

DROP ASSEMBLY [__codeBehind_v5byzwoh.k1a];
// Generated Code Behind Footer
</Scopescript>
  <Optimization succeeded="true" time="00:00:00.4543218" latency="-1" totalCost="-1" />
  <ScopeVertexAnnotations>
    <ScopeVertex name="SV1_Extract_Split">
      <Operation annotation="EXTRACT USING TxtExtractor" />
    </ScopeVertex>
    <ScopeVertex name="SV2_Process">
      <Operation annotation="OUTPUT USING IOutputter" />
    </ScopeVertex>
    <ScopeVertex name="SV3_Process">
      <Operation annotation="OUTPUT USING IOutputter" />
    </ScopeVertex>
    <ScopeVertex name="SV4_Process">
      <Operation annotation="OUTPUT USING IOutputter" />
    </ScopeVertex>
    <ScopeVertex name="SV5_Process">
      <Operation annotation="OUTPUT USING IOutputter" />
    </ScopeVertex>
  </ScopeVertexAnnotations>
</ScriptAndGraph>